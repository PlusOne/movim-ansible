---
- name: Install Movim XMPP HTTP responsive client
  hosts: all
  become: yes

  vars:
    db_name: movim_db
    db_user: movim_user
    db_password: secure_password
    php_version: 8.1
    service_user: www-data
    domain_name: example.com
    db_driver: "{{ db_type }}"
    db_host: "localhost"  # Add this line
    db_port: "{{ '3306' if db_type == 'mysql' else '5432' }}"  # Add this line
    db_database: "{{ db_name }}"  # Add this line
    db_username: "{{ movim_db_user }}"  # Add this line
    daemon_port: "{{ backend_port }}"  # Add this line
    daemon_interface: "{{ backend_ip }}"  # Add this line

  vars_prompt:
    - name: daemon_url
      prompt: "Enter the DAEMON_URL"
      private: no
      default: "https://movim.example.net/"
    - name: db_type
      prompt: "Select Database Type (mysql/postgresql)"
      private: no
      default: "mysql"
    - name: mysql_root_user
      prompt: "Enter MySQL root username"
      private: no
      default: "root"
    - name: mysql_root_password
      prompt: "Enter MySQL root password"
      private: yes
    - name: movim_db_user
      prompt: "Enter the Movim database username"
      private: no
      default: "movim_user"
    - name: movim_db_password
      prompt: "Enter the Movim database password"
      private: yes
    - name: web_server
      prompt: "Select Web Server (nginx/caddy/apache2)"
      private: no
      default: "nginx"
    - name: backend_ip
      prompt: "Enter the backend IP address"
      private: no
      default: "127.0.0.1"
    - name: backend_port
      prompt: "Enter the backend port"
      private: no
      default: "8075"
    - name: install_service
      prompt: "Do you want to install the Movim systemd service? (yes/no)"
      private: no
      default: "yes"
    - name: movim_dir
      prompt: "Enter the destination directory for Movim"
      private: no
      default: "/var/www/movim"
    - name: copy_env_file
      prompt: "After pulling the latest code from Movim, do you want to copy .env.example.j2 to .env? (yes/no)"
      private: no
      default: "yes"

  tasks:
    - name: Remove existing Movim directory and drop DB if reinstall
      block:
        - name: Remove Movim directory
          file:
            path: "{{ movim_dir }}"
            state: absent

        - name: Drop MySQL database
          mysql_db:
            name: "{{ db_name }}"
            state: absent
      when: reinstall | default(false)

    - name: Purge Movim destination directory
      file:
        path: "{{ movim_dir }}"
        state: absent

    - name: Debug db_type variable
      debug:
        msg: "db_type is set to {{ db_type }}"

    - include_tasks: configure_mysql.yml
      when: db_type == "mysql"

    - include_tasks: configure_postgresql.yml
      when: db_type == "postgresql"

    - name: Ensure required packages are installed
      apt:
        name: 
          - nginx
          - php{{ php_version }}-fpm
          - php{{ php_version }}-mysql
          - git
        state: present

    - name: Ensure additional PHP modules and composer are installed
      apt:
        name:
          - php-imagick
          - php-gd
          - php-xml
          - php-mbstring
          - composer
          - php{{ php_version }}-curl
        state: present

    - name: Clone Movim repository
      git:
        repo: 'https://github.com/movim/movim.git'
        dest: "{{ movim_dir }}"
        version: master
        force: yes

    - name: Run composer install
      command: composer install
      args:
        chdir: "{{ movim_dir }}"

    - name: Debug copy_env_file variable
      debug:
        msg: "copy_env_file is set to {{ copy_env_file }}"

    - name: Copy and update Movim .env file (conditional)
      template:
        src: templates/.env.example.j2  # Ensure this path is correct
        dest: "{{ movim_dir }}/.env"
        mode: '0644'
        owner: "{{ service_user }}"
        group: "{{ service_user }}"
        vars:
          db_driver: "{{ db_type }}"
          db_host: "{{ db_host }}"  # Ensure this variable is defined
          db_port: "{{ db_port }}"  # Ensure this variable is defined
          db_database: "{{ db_name }}"
          db_username: "{{ movim_db_user }}"
          db_password: "{{ movim_db_password }}"
          daemon_url: "{{ daemon_url }}"
          daemon_port: "{{ backend_port }}"
          daemon_interface: "{{ backend_ip }}"
          daemon_debug: "false"
          daemon_verbose: "false"
      when: copy_env_file == "yes"

    - name: Debug .env file creation
      stat:
        path: "{{ movim_dir }}/.env"
      register: env_file

    - name: Debug .env file status
      debug:
        var: env_file

    - name: Run Movim database migrations
      command: composer movim:migrate
      args:
        chdir: "{{ movim_dir }}"
      when: db_type == "mysql"

    - name: Ensure Nginx is installed
      apt:
        name: nginx
        state: present
      when: web_server == "nginx"

    - name: Ensure Caddy is installed
      apt:
        name: caddy
        state: present
      when: web_server == "caddy"

    - name: Ensure Apache2 is installed
      apt:
        name:
          - apache2
          - libapache2-mod-php{{ php_version }}
        state: present
      when: web_server == "apache2"

    - name: Configure Nginx for Movim
      template:
        src: nginx_movim.conf.j2
        dest: /etc/nginx/sites-available/movim
      when: web_server == "nginx"

    - name: Configure Caddy for Movim
      template:
        src: templates/caddy_movim.conf.j2
        dest: /etc/caddy/Caddyfile
      when: web_server == "caddy"

    - name: Configure Apache2 for Movim
      template:
        src: apache2_movim.conf.j2
        dest: /etc/apache2/sites-available/movim.conf
      when: web_server == "apache2"

    - name: Enable selected web server site
      file:
        src: "{{ 
          '/etc/nginx/sites-available/movim' if web_server == 'nginx' else
          '/etc/caddy/Caddyfile' if web_server == 'caddy' else
          '/etc/apache2/sites-available/movim.conf' 
        }}"
        dest: "{{ 
          '/etc/nginx/sites-enabled/movim' if web_server == 'nginx' else
          '/etc/caddy/sites-enabled/movim' if web_server == 'caddy' else
          '/etc/apache2/sites-enabled/movim.conf' 
        }}"
        state: link
      when: web_server in ["nginx", "caddy", "apache2"]
      notify:
        - Reload Web Server

    - name: Validate db_type
      assert:
        that:
          - db_type in ['mysql', 'postgresql']
        fail_msg: "db_type must be either 'mysql' or 'postgresql'."

    - name: Create systemd service file for Movim
      template:
        src: systemd_movim.service.j2
        dest: /etc/systemd/system/movim.service
      when: install_service | default(false)

    - name: Reload systemd daemon
      command: systemctl daemon-reload
      when: install_service | default(false)

    - name: Enable Movim service
      systemd:
        name: movim
        enabled: true
        state: started
      when: install_service | default(false)

  handlers:
    - name: Reload Web Server
      block:
        - name: Reload Nginx
          service:
            name: nginx
            state: reloaded
          when: web_server == "nginx"

        - name: Reload Caddy
          service:
            name: caddy
            state: reloaded
          when: web_server == "caddy"

        - name: Reload Apache2
          service:
            name: apache2
            state: reloaded
          when: web_server == "apache2"

    - name: Restart Movim Service
      service:
        name: movim
        state: restarted
      when: install_service | default(false)
